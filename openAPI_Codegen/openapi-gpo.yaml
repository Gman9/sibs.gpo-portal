openapi: 3.0.1
info:
  description: |-
    A GPO API (Gateway de Pagamentos Online) é um serviço prestado pela EMIS que permite aos comerciantes e fornecedores de software implementarem soluções que integram com os meios de pagamentos em Angola.
    # Getting Started
    Esta API comunica com um processador de transações afim de validar as mesma, para isso existe um grupo de passos necessarios para iniciar a utilização desta API.
     ## 1 - Registar a aplicação no AuthorizationServer
     O primeiro passo para usar esta API é registar a aplicação no AuthorizationServer.
     Quando a aplicação estiver registada será atribuido um client_id e um client_secret que serão usados para criar os bearer_tokens
     ## 2 - Gerar um Access Token
     Após o registo da aplicação na API, é necessário gerar um access token que irá conceder permissões através dos nossos endpoints.
     Para gerar o token, é necessário completar o formulario apresentado no POST /v1/token.
     O token gerado possui uma data de validade, quando esta data é ultrapassada é necessario gerar um novo token ou actualizar o token anteriormente gerado.
    ## 3 - Enviar o Token via Http
     Apenas com um token valido é possivel trabalhar com a API.
     Será necessário enviar o token em todos os pedidos afim de este ser usado, para isso o token deverá ser incluido nos http headers de cada pedido.
    ```html
        Authentication: Bearer <your-access-token>
    ```
  title: Online Payment Gateway
  version: '2.0'
  x-logo:
    url: http://localhost:8080/online-payment-gateway/static/logo2.gif
servers:
  - description: GPO Server
    url: '{url}/online-payment-gateway/api'
    variables:
      url:
        default: http://localhost:8080
        description: Location of GPO API
security:
  - BearerAuth: []
tags:
  - description: Endpoints responsible for authentication.
    name: Token
  - description: Endpoints responsible for handling Merchants resources.
    name: Merchants
  - description: Enpoints responsible for handle Establishments resources.
    name: Establishments
  - description: Endpoints responsible for handling Points of Sale resources.
    name: Points of Sale
  - description: Endpoints responsible for handling Supervisor resources.
    name: Supervisors
  - description: Endpoints responsible for handling Merchant References resources.
    name: References
  - description: Endpoints responsible for handling Transaction resources.
    name: Transactions
  - description: Endpoints responsible for handling Periods resources.
    name: Periods
  - description: Endpoints responsible for handling Schedules resources.
    name: Schedules
  - description: Endpoints with information of available gateway errors.
    name: Errors
paths:
  /v1/token:
    get:
      description: Get Token Information.
      operationId: getTokenInfo
      parameters:
        - explode: true
          in: query
          name: accessToken
          required: true
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                processor: EPMS
                active: true
                resources:
                  - id: d3cf81b7-9644-40cf-baa9-546d87553612
                    createdDate: null
                    updatedDate: '2021-01-25T09:51:34Z'
                    active: true
                    identifier: 18
                expiredDate: '2021-03-01T11:41:15Z'
              schema:
                $ref: '#/components/schemas/TokenInfo'
          description: Success retrieving the token.
        '404':
          content:
            application/json:
              example:
                code: '404'
                message: Resource Access Token with identifier not found
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Not Found
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Get Token Information.
      tags:
        - Token
    post:
      description: |-
        This service allows a client to create a new access token or refresh an existing access token. The token is required to communicate with the API.

        Depending on the client configuration the request for a new token may use one of the following grant_type options:
        - <strong>authorization_code</strong> - for clients that use GPO Sign-On
        - <strong>offline</strong> - for clients that request merchant authorization offline

        This service also allows to refresh an existing access token by using the grant_type <strong>refresh_token</strong>.
      operationId: createTokenInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantTokenImplementation'
      responses:
        '200':
          content:
            application/json:
              example:
                access_token: 67648bd3-da8b-4c1c-8d0e-ee2b2bcf80b1
                refresh_token: 5HgBjW3OZHMNg4fYci17pEiRq9N9RwB7u9w0f9tulDlZU4FAlMUnoovHhewRCAB2OtRsjo1pIWE2PLTsNZBcjrxIhGsWnIwivHSRTn3QO3+5nE9pmib3IucuhvY1XvVPnMSvRT51O2lRYN3mMqVaq1riWE0AcmetlSD76cxUWW8=
                expires_in: 3600
                token_type: bearer
                id_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiRExfR1BPIiwiZXhwIjoxNjE0MjY5NDk4LCJpYXQiOjE2MDAyNDgyNjQsInVzZXJJZCI6IjU4MzRlMzkxLTNmMzQtNDA2ZS1hYmE5LTIzNDE4YjI5OGJhYSIsImVtYWlsIjoiZGwtZ3BvQHNpYnMuY29tIn0.eDfSa-nJWCuCqkeINc6fkcTUgsVW96Vv6qSZqr-oPAI
              schema:
                $ref: '#/components/schemas/GrantToken'
          description: Success creating or refreshing an access token.
        '400':
          content:
            application/json:
              example:
                type: CONSTRAINTS
                errors:
                  - code: CONSTRAINTS
                    message: Invalid grant_type 'a'. Valid options are 'authorization_code', 'offline' or 'refresh'
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '404':
          content:
            application/json:
              example:
                type: VALIDATION
                errors:
                  - code: VALIDATION_UNKNOWN_RESOURCE
                    message: Invalid resource.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Not Found.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates or refreshes an access token.
      tags:
        - Token
  /v1/merchants/{merchantId}:
    get:
      description: Retrieves a Merchant based on the provided identifier.
      operationId: getMerchantById
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2020-12-17T17:03:49.898Z'
                updatedDate: '2021-03-09T16:30:38.157Z'
                active: true
                contacts:
                  - creationDate: '2020-12-17T17:03:49.899Z'
                    address: Farmácia Central
                    name: Dr Ferraz Leal
                establishments:
                  - id: '2000'
                    name: Farmacia Central
                    active: true
                defaultPosId: '1'
                id: '20'
              schema:
                $ref: '#/components/schemas/Merchant'
          description: Success retrieving Merchant.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Merchant.
      tags:
        - Merchants
    put:
      description: This endpoint allows to add or change additional information of a Merchant. Current version permits to add a default POS to a merchant.
      operationId: patchMerchantById
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantPatch'
        description: Patchable Merchant Information
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2020-12-17T17:03:49.898Z'
                updatedDate: '2021-03-09T16:30:38.157Z'
                active: true
                contacts:
                  - creationDate: '2020-12-17T17:03:49.899Z'
                    address: Farmácia Central
                    name: Dr Ferraz Leal
                establishments:
                  - id: '2000'
                    name: Farmacia Central
                    active: true
                id: '20'
                defaultPosId: '1'
                schema:
                  $ref: '#/components/schemas/Merchant'
          description: Merchant sucessfuly patched.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Updates a Merchant with additional information.
      tags:
        - Merchants
  /v1/merchants/{merchantId}/establishments/{establishmentId}:
    get:
      description: Retrieves a Establishment based on the provided identifier.
      operationId: getEstablishmentById
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: establishmentId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2021-02-26T11:13:05.066Z'
                updatedDate: '2021-02-26T11:13:06.972Z'
                active: true
                pointsOfSale:
                  - active: true
                    id: '1109'
                  - active: false
                    id: '1009'
                  - active: false
                    id: '1119'
                contacts:
                  - creationDate: '2020-12-17T17:03:49.899Z'
                    contact: '2442555666'
                    address: Rua  Egas Monis, 1000-200, Maianga
                    name: José Almeida
                name: Farmacia Central
                id: '2000'
              schema:
                $ref: '#/components/schemas/Establishment'
          description: Success retrieving Establishment.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Establishment with id 2 not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Merchant Establishment.
      tags:
        - Establishments
  /v1/merchants/{merchantId}/establishments/{establishmentId}/supervisors:
    get:
      description: Retrieves all Supervisor Data for the establishment based on the provided parameters.
      operationId: getSupervisors
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: establishmentId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: value eq '9610000018000100010006000000000000001' AND alias eq "961-6"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - type: CARD
                  status: VALID
                  alias: 961-6
                  creationDate: '2021-03-03T15:50:35.296Z'
                  merchantId: '18'
                  establishmentId: '1'
                  supervisorId: a193adbe-d5bc-4f31-a73b-65f53e874147
              schema:
                $ref: '#/components/schemas/SupervisorList'
          description: Success retrieving establishment Supervisor Data.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: QUERY_PARAMS
                    message: Invalid Query Parameter with name '$filt' was provided.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all Supervisor Data for the establishment.
      tags:
        - Supervisors
    post:
      description: Creates an Establishment supervisor based on the provided body.
      operationId: createSupervisor
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: establishmentId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              supervisorData:
                type: 961
                number: 1
                bankCode: 12
              validation:
                posId: 1109
                transactionType: RESET
            schema:
              $ref: '#/components/schemas/Supervisor'
        description: Supervisor Object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                type: CARD
                status: UNKNOWN
                alias: 961-1
                creationDate: '2021-03-03T15:50:35.296Z'
                merchantId: '18'
                establishmentId: '1'
                supervisorId: a193adbe-d5bc-4f31-a73b-65f53e874147
              schema:
                $ref: '#/components/schemas/Supervisor'
          description: Success creating an establishment supervisor.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '409':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: DUPLICATED_RESOURCE
                    message: Supervisors with id 9610000000001 already exists.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier already exists.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates an Establishment Supervisor.
      tags:
        - Supervisors
  /v1/merchants/{merchantId}/establishments/{establishmentId}/supervisors/{supervisorId}:
    get:
      description: Retrieves an Establishment supervisor based on the provided parameters.
      operationId: getSupervisorById
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: establishmentId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: supervisorId
          required: true
          schema:
            description: Unique identifier of the supervisor.
            example: 70f83608-38d3-4324-82e9-e34dc59d65aa
            maxLength: 36
            minLength: 1
            type: string
            writeOnly: true
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                type: CARD
                status: VALID
                alias: 961-1
                creationDate: '2021-03-03T15:50:35.296Z'
                merchantId: '18'
                establishmentId: '1'
                supervisorId: a193adbe-d5bc-4f31-a73b-65f53e874147
              schema:
                $ref: '#/components/schemas/Supervisor'
          description: Success retrieving Establishment Supervisor Data.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Supervisors with id 33b811920-1712-477d-910a-0533a3a3a33e not found
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves an Establishment Supervisor Data.
      tags:
        - Supervisors
  /v1/merchants/{merchantId}/points-of-sale:
    get:
      description: Retrieves all Points of Sale for the specified merchant identification.
      operationId: getAllMerchantPos
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: creationDate gt '2020-08-14T13:09:12.963Z'
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - creationDate: '2020-12-17T17:03:49.899Z'
                  updatedDate: '2021-03-03T10:27:48.900Z'
                  active: true
                  id: '1109'
                  name: Hello
                  status: OPEN
                  scenario: ATTENDED
                  clearingPeriod:
                    id: '105'
                  establishment:
                    id: '2000'
                    merchant:
                      id: '20'
                  supervisorId: 1ff31f52-1748-439c-bf89-a0755a7e30c3
              schema:
                $ref: '#/components/schemas/PointOfSaleList'
          description: Success retrieving Points Of Sale.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all Points of Sale of a Merchant.
      tags:
        - Points of Sale
  /v1/merchants/{merchantId}/references:
    get:
      description: Retrieves all References based on provided query parameters.
      operationId: getAllMerchantsRefs
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: creationDate gt '2020-08-14T13:09:12.963Z' AND status eq "CLOSED"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - creationDate: '2020-08-14T13:09:12.963Z'
                  updatedDate: '2020-08-14T13:09:15.630Z'
                  status: CLOSED
                  orderOrigin: MOBILE
                  authorized: 0
                  available: 0
                  refunded: 100
                  cancelled: 0
                  payed: 100
                  cancellable: false
                  authorizable: false
                  authorizations: 0
                  payments: 1
                  cancellations: 0
                  refunds: 2
                  id: 03GJCTSRHXU5ZWNE
                  pointOfSale:
                    id: '1109'
                  paymentToken:
                    id: b0590a68-8276-4791-bcc1-c63101f56e07
              schema:
                $ref: '#/components/schemas/ReferenceList'
          description: Success retrieving References.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: QUERY_PARAMS
                    message: Invalid Query Parameter with name '$filt' was provided.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all References.
      tags:
        - References
  /v1/merchants/{merchantId}/references/{referenceId}:
    get:
      description: Retrieves a Reference based on the provided identifier.
      operationId: getMerchantRefById
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: referenceId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2020-08-14T13:09:12.963Z'
                updatedDate: '2020-08-14T13:09:15.630Z'
                status: CLOSED
                orderOrigin: MOBILE
                authorized: 0
                available: 0
                refunded: 100
                cancelled: 0
                payed: 100
                cancellable: false
                authorizable: false
                authorizations: 0
                payments: 1
                cancellations: 0
                refunds: 2
                id: 03GJCTSRHXU5ZWNE
                pointOfSale:
                  id: '1109'
                paymentToken:
                  id: b0590a68-8276-4791-bcc1-c63101f56e07
              schema:
                $ref: '#/components/schemas/Reference'
          description: Success retrieving a Reference.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Reference with id 546516 not found
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Reference.
      tags:
        - References
  /v1/merchants/{merchantId}/transactions:
    get:
      description: Retrieves all Transactions based on provided query parameters.
      operationId: getAllMerchantTransactions
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: pointOfSale/id eq '1109' AND amount gt 100
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - creationDate: '2021-03-10T13:40:12.625Z'
                  updatedDate: '2021-03-10T13:40:14.183Z'
                  id: WI8H7EZ2U6XD914K
                  amount: 1000
                  clearingPeriod: '54'
                  transactionNumber: '53'
                  status: REJECTED
                  transactionType: AUTHORIZATION
                  orderOrigin: PRESENT
                  currency: AOA
                  pointOfSale:
                    id: '1109'
                  reference:
                    orderOrigin: MOBILE
                    id: GT5CIUOB1HSV082P
                  merchantReferenceNumber: GT5CIUOB1HSV082P
                  parentTransaction: {}
                  errorCode: EPMS_907
                  errorType: EPMS_PROCESSOR
                  errorMessage: Recusado pelo processador. Necessário contactar a área de suporte.
              schema:
                $ref: '#/components/schemas/TransactionList'
          description: Success retrieving Transactions.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all Transactions.
      tags:
        - Transactions
  /v1/merchants/{merchantId}/transactions/{transactionId}:
    get:
      description: Retrieves a Transaction based on the provided identifier.
      operationId: getTransactionById
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: transactionId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2021-03-10T13:40:12.625Z'
                updatedDate: '2021-03-10T13:40:14.183Z'
                id: WI8H7EZ2U6XD914K
                amount: 1000
                clearingPeriod: '54'
                transactionNumber: '53'
                status: REJECTED
                transactionType: AUTHORIZATION
                orderOrigin: PRESENT
                currency: AOA
                pointOfSale:
                  id: '1109'
                reference:
                  orderOrigin: MOBILE
                  id: GT5CIUOB1HSV082P
                merchantReferenceNumber: GT5CIUOB1HSV082P
                parentTransaction: {}
                errorCode: EPMS_907
                errorType: EPMS_PROCESSOR
                errorMessage: Recusado pelo processador. Necessário contactar a área de suporte.
              schema:
                $ref: '#/components/schemas/OPGTransaction'
          description: Success retrieving a Transaction.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Transactions with id 12G9SCVJARNT5MX0 not found
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Transaction.
      tags:
        - Transactions
  /v1/merchants/{merchantId}/periods:
    get:
      description: Retrieves all Periods based on the provided query parameters.
      operationId: getPeriodsForMerchant
      parameters:
        - explode: false
          in: path
          name: merchantId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: commission/commissioned gt 0 AND number eq "100"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - posId: '1'
                  creationDate: '2021-03-01T11:20:00.578Z'
                  updatedDate: '2021-03-01T17:04:03.929Z'
                  number: '104'
                  transactions: 2
                  openDate: '2021-03-01T11:20:00.578Z'
                  closeDate: '2021-03-01T17:04:03.929Z'
                  references: 1
                  authorized: 18.25
                  cancelled: 0
                  payed: 18.25
                  refunded: 18.25
                  commission:
                    creationDate: '2021-03-01T11:20:00.578Z'
                    updatedDate: '2021-03-01T17:04:03.929Z'
                    commissioned: 0
                    contracts:
                      - description: MULTICAIXA
                        totalTransactions: 3
                        amount: 0
                        commissioned: 0
                        positiveCommission: true
                        positiveBalance: true
                    transactions:
                      - total: 1
                        description: DEVOLUCAO
                        amount: 18.25
                        type: REFUND
                      - total: 1
                        description: COMPRA AUT
                        amount: 18.25
                        type: AUTHORIZATION
              schema:
                $ref: '#/components/schemas/ClearingPeriodsList'
          description: Success retrieving Period.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all periods of a merchant.
      tags:
        - Periods
  /v1/points-of-sale/{posId}:
    get:
      description: Retrieves a Point of Sale based on the provided identifier.
      operationId: getPosById
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2020-12-17T17:03:49.899Z'
                updatedDate: '2021-03-03T10:27:48.900Z'
                active: true
                id: '1109'
                name: Hello
                status: OPEN
                scenario: ATTENDED
                clearingPeriod:
                  id: '105'
                establishment:
                  id: '2000'
                  merchant:
                    id: '20'
                supervisorId: 1ff31f52-1748-439c-bf89-a0755a7e30c3
              schema:
                $ref: '#/components/schemas/PointOfSale'
          description: Success retrieving Point of Sale.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Point of Sale.
      tags:
        - Points of Sale
    put:
      description: This endpoint allows to add or change additional information of a Point Of Sale. Current version permits to name a point of sale to a more human readable option.
      operationId: patchPosById
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointOfSalePatch'
        description: Patchable Pos Information
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2020-12-17T17:03:49.899Z'
                updatedDate: '2021-03-03T10:27:48.900Z'
                active: true
                id: '1109'
                name: Megastore Pos
                status: OPEN
                scenario: ATTENDED
                clearingPeriod:
                  id: '105'
                establishment:
                  id: '2000'
                  merchant:
                    id: '20'
                supervisorId: 1ff31f52-1748-439c-bf89-a0755a7e30c3
              schema:
                $ref: '#/components/schemas/PointOfSale'
          description: Point of Sale sucessfuly patched.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Updates a Point of Sale with additional information.
      tags:
        - Points of Sale
  /v1/points-of-sale/{posId}/close:
    get:
      description: Conducts a close operation on the provided point of sale identifier.
      operationId: closePosById
      parameters:
        - description: Terminal id
          explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - deprecated: true
          description: Supervisor Card. Use supervisorId instead, this field is to be removed.
          example: '961000001400010001961000001400010001'
          explode: true
          in: query
          name: supervisorCard
          required: false
          schema:
            deprecated: true
            maxLength: 37
            minLength: 18
            pattern: ^((96[1|6]0)((?!0{4})[0-9]{4}){2}([0-9]{4})?([0-9]{15})?)$
            type: string
          style: form
        - description: Supervisor id, assigned upon Supervisor creation
          example: 70f83608-38d3-4324-82e9-e34dc59d65aa
          explode: true
          in: query
          name: supervisorId
          required: false
          schema:
            maxLength: 36
            minLength: 1
            type: string
          style: form
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Point of sale closed with success.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: CLOSE_IN_PROGRESS
                    message: Close request for point of sale is already in progress.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Supervisor with id 123456 not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
        '503':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: CLOSE_PENDING_TRANSACTIONS
                    message: Unable to close point of sale with pending transactions. Please try again later.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
      summary: Closes a point-of-sale.
      tags:
        - Points of Sale
  /v1/points-of-sale/{posId}/open:
    get:
      description: Conducts an open operation on the provided point of sale identifier.
      operationId: openPosById
      parameters:
        - description: Terminal id
          explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - deprecated: true
          description: Supervisor Card. Use supervisorId instead, this field is to be removed.
          example: '961000001400010001961000001400010001'
          explode: true
          in: query
          name: supervisorCard
          required: false
          schema:
            deprecated: true
            maxLength: 37
            minLength: 18
            pattern: ^(9610)((?!0{6})[0-9]{6})((?!0{4})[0-9]{4}){2}([0-9]{4})([0-9]{15})?$
            type: string
          style: form
        - description: Supervisor id, assigned upon Supervisor creation
          example: 70f83608-38d3-4324-82e9-e34dc59d65aa
          explode: true
          in: query
          name: supervisorId
          required: false
          schema:
            maxLength: 36
            minLength: 1
            type: string
          style: form
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Point of sale opened with success.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Supervisor with id 123456 not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Not Found
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
        '503':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: OPEN_PENDING_TRANSACTIONS
                    message: Unable to open point of sale with pending transactions. Please try again later.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
      summary: Opens a point-of-sale.
      tags:
        - Points of Sale
  /v1/points-of-sale/{posId}/transactions:
    get:
      description: Retrieves all Transactions based on provided query parameters.
      operationId: getAllPosTransasctions
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.oderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: pointOfSale/id gt '1109' AND amount eq "100"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - creationDate: '2021-03-10T13:40:12.625Z'
                  updatedDate: '2021-03-10T13:40:14.183Z'
                  id: WI8H7EZ2U6XD914K
                  amount: 1000
                  clearingPeriod: '54'
                  transactionNumber: '53'
                  status: REJECTED
                  transactionType: AUTHORIZATION
                  orderOrigin: PRESENT
                  currency: AOA
                  pointOfSale:
                    id: '1109'
                  reference:
                    orderOrigin: MOBILE
                    id: GT5CIUOB1HSV082P
                  merchantReferenceNumber: GT5CIUOB1HSV082P
                  parentTransaction: {}
                  errorCode: EPMS_907
                  errorType: EPMS_PROCESSOR
                  errorMessage: Recusado pelo processador. Necessário contactar a área de suporte.
              schema:
                $ref: '#/components/schemas/TransactionList'
          description: Success retrieving Transactions.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: QUERY_PARAMS
                    message: Invalid Query Parameter with name '$filt' was provided.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all Transactions.
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/transactions/{transactionId}:
    get:
      description: Retrieves a Transaction based on the provided identifier.
      operationId: getPosTransactionById
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: transactionId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                creationDate: '2021-03-10T11:23:21.402Z'
                updatedDate: '2021-03-10T11:23:22.282Z'
                id: JH4FAUSLZVM90NT5
                amount: 1000
                clearingPeriod: '54'
                transactionNumber: '48'
                status: ACCEPTED
                transactionType: AUTHORIZATION
                orderOrigin: PRESENT
                issuerAuthorization: '119981'
                currency: AOA
                pointOfSale:
                  id: '1109'
                reference:
                  orderOrigin: MOBILE
                  id: ALE837FQUXHBRKY0
                merchantReferenceNumber: ALE837FQUXHBRKY0
                parentTransaction: {}
              schema:
                $ref: '#/components/schemas/OPGTransaction'
          description: Success retrieving a Transaction.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Transactions with id 12G9SCVJARNT5MX0 not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Transaction.
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/authorizations:
    post:
      description: Create a authorization Transaction with the provided Pos Identifier
      operationId: createPosAuthorization
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authorization'
        description: Authorization Parameters
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Creation of Authorization was successfully
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: TRANSACTIONAL_BLOCKED
                    message: Unable to accept operation while transactional is blocked.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Create a authorization Transaction
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/authorizations/{authorizationId}/cancellations:
    post:
      description: Creates a cancellation Transaction based on the provided identifier.
      operationId: createPosCancellation
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: authorizationId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Success creating a Cancellation.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: TRANSACTIONAL_BLOCKED
                    message: Unable to accept operation while transactional is blocked.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Transaction with id 123 not found
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates a cancellation Transaction
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/authorizations/{authorizationId}/payments:
    post:
      description: Creates a payment Transaction based on the provided identifier.
      operationId: createPosPayment
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: authorizationId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedPayment'
        description: AuthorizedPayment object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Success creating a Payment.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: TRANSACTIONAL_BLOCKED
                    message: Unable to accept operation while transactional is blocked.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Transactions with id 1QN6RGA4MHULY08Z not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates a payment Transaction
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/authorizations/{authorizationId}/payments/{paymentId}/refunds:
    post:
      description: Creates a refund Transaction based on the provided identifier.
      operationId: createPosPaymentRefund
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: authorizationId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: paymentId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund'
        description: Refund object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Success creating an App.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: TRANSACTIONAL_BLOCKED
                    message: Unable to accept operation while transactional is blocked.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Transactions with id 202310907394918 not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates a refund Transaction
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/payments:
    post:
      description: Create a Payment Transaction with the provided Pos Identifier
      operationId: createPosPurchase
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        description: Payment Params
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Creation of Payment was successfully
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: TRANSACTIONAL_BLOCKED
                    message: Unable to accept operation while transactional is blocked.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Create a Payment Transaction
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/payments/{paymentId}/refunds:
    post:
      description: Creates a refund Transaction based on the provided identifier.
      operationId: createPosPurchaseRefund
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: paymentId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund'
        description: Refund object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                id: 24ALZ1YSVW0HK93X
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Success creating an App.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: PATH_PARAMS
                    message: Invalid paymentId with value '11W4MUF9ZKBQY2X', was provided.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '403':
          content:
            application/json:
              example:
                type: BUSINESS
                errors:
                  - code: TRANSACTIONAL_BLOCKED
                    message: Unable to accept operation while transactional is blocked.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Forbidden request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Transactions with id 4CPLIBQWONXD93aKM not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates a refund Transaction
      tags:
        - Transactions
  /v1/points-of-sale/{posId}/periods:
    get:
      description: Retrieves all Periods based on the provided query parameters.
      operationId: getPeriodsForPos
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: commission/commissioned gt 0 AND number eq "100"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - creationDate: '2021-03-01T11:20:00.578Z'
                  updatedDate: '2021-03-01T17:04:03.929Z'
                  number: '104'
                  transactions: 2
                  openDate: '2021-03-01T11:20:00.578Z'
                  closeDate: '2021-03-01T17:04:03.929Z'
                  references: 1
                  authorized: 18.25
                  cancelled: 0
                  payed: 18.25
                  refunded: 18.25
                  commission:
                    creationDate: '2021-03-01T11:20:00.578Z'
                    updatedDate: '2021-03-01T17:04:03.929Z'
                    commissioned: 0
                    contracts:
                      - description: MULTICAIXA
                        totalTransactions: 3
                        amount: 0
                        commissioned: 0
                        positiveCommission: true
                        positiveBalance: true
                    transactions:
                      - total: 1
                        description: DEVOLUCAO
                        amount: 18.25
                        type: REFUND
                      - total: 1
                        description: COMPRA AUT
                        amount: 18.25
                        type: AUTHORIZATION
              schema:
                $ref: '#/components/schemas/ClearingPeriodsList'
          description: Success retrieving Period.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all periods of a point of sale.
      tags:
        - Periods
  /v1/points-of-sale/{posId}/periods/{clearingPeriodNumber}:
    get:
      description: Retrieves a Clearing Period based on the provided identifiers.
      operationId: getPosPeriodById
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: clearingPeriodNumber
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearingPeriod'
          description: Success retrieving a Clearing Period.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: ClearingPeriod with id 123 not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves a Clearing Period from a provided Point of Sale.
      tags:
        - Periods
  /v1/points-of-sale/{posId}/schedules:
    get:
      description: Retrieves schedules of the point of sale based on provided parameters.
      operationId: getAllPosSchedules
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.oderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: executionId eq '33b811920-1712-477d-910a-0533a3a3a33e' AND posId eq "1109"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosScheduleList'
          description: Success retrieving Schedules.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves all schedules of a point of sale
      tags:
        - Schedules
    post:
      description: Creates a daily schedule for a point of sale to run at a specific time of a selected transaction. At current version, there can only be one schedule per point of sale.
      operationId: createPosSchedule
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              transactionType: CLEARANCE
              time: '01:30'
            schema:
              $ref: '#/components/schemas/PosSchedule'
        description: Schedule object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                scheduleId: 33b811920-1712-477d-910a-0533a3a3a33e
                active: true
                transactionType: CLEARANCE
                time: '01:30'
                creationDate: '2021-03-02T15:59:31.720Z'
              schema:
                $ref: '#/components/schemas/PosSchedule'
          description: Success creating an App.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '409':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: DUPLICATED_RESOURCE
                    message: Schedule with id 0230cf65-628a-4362-a89d-da2069640d38 already exists.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier already exists.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates a schedule for a point of sale
      tags:
        - Schedules
  /v1/points-of-sale/{posId}/schedules/{scheduleId}:
    put:
      description: Service to change time or operation of the schedule. This service also allows to disable/enable the schedule.
      operationId: putPosSchedule
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: scheduleId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              time: '00:30'
            schema:
              $ref: '#/components/schemas/PosSchedule'
        description: Schedule object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosSchedule'
          description: Schedule sucessfuly updated.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Schedule with id 33b811920-1712-477d-910a-0533a3a3a33e not found
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Provided identifier doesn't exist.
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Updates a schedule of a point of sale
      tags:
        - Schedules
  /v1/points-of-sale/{posId}/schedules/{scheduleId}/executions:
    get:
      description: Service to obtain the executions of a configured schedule. These executions indicate unique information used in the transaction, such as transaction id.
      operationId: getAllPosScheduleExecutions
      parameters:
        - explode: false
          in: path
          name: posId
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: scheduleId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            example: creationDate ASC
            type: string
            x-notNull: '{api.queryParameters.oderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: executionId eq '33b811920-1712-477d-910a-0533a3a3a33e' AND posId eq "1109"
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosScheduleExecutionList'
          description: Success retrieving Schedule Executions.
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves the executions of a schedule
      tags:
        - Schedules
  /v1/errors/processor:
    get:
      description: Processor errors are indentified by the field errorType 'EPMS_PROCESSOR' in the transaction object. If an error is received from the gateway that is not returned by this service please contact support. This service allows the usage of Accept Language in header to return the available errors in a specific language.
      operationId: getAllProcessorErrors
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorErrorList'
          description: Success retrieving list of known processor errors.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: HEADER_PARAMS
                    message: Invalid Header Parameter with name 'Accept-Language' was provided with value 'fr_fr'.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Requested Accept-Language is not configured
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Retrieves the list of processor errors known to the gateway
      tags:
        - Errors
components:
  schemas:
    GrantToken:
      properties:
        tokenType:
          enum:
            - bearer
          type: string
        access_token:
          example: 3fb7aad0-f707-44e0-a123-caf08097a8bd"
          type: string
        refresh_token:
          example: gTFMN1cDBBcGYxlPt9RmxcM3nUYeOV0VFAbC6DWUs0OVHXLI4Z/tki/49An7jzSAJhr+asnV5f3B2uvEol8eAFsbztvsOoYCZ0ThHGGQgtZN6AYbobckeF0Y2eJzw8d6qcF7+sJOn7FiOGJsHQtIbNHufBcVRctCYNpKwzZWYRI=
          type: string
        id_token:
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiRExfR1BPIiwiZXhwIjoxNjA0Njc2NTQ5LCJpYXQiOjE2MDI1ODU0NzQsInVzZXJJZCI6IjU4MzRlMzkxLTNmMzQtNDA2ZS1hYmE5LTIzNDE4YjI5OGJhYSIsImVtYWlsIjoiZGwtZ3BvQHNpYnMuY29tIn0.e8HlOjXSN0dbvO0VJqFlugyvEdHZRFItVRZLv5oGxrA
          type: string
        expiresIn:
          example: 3600
          format: int32
          type: integer
      type: object
    MerchantPatch:
      properties:
        defaultPosId:
          description: Unique identifier of the terminal.
          example: '1'
          type: string
          x-notNull: '{api.merchant.defaultPosId}'
      required:
        - defaultPosId
      type: object
    PointOfSalePatch:
      properties:
        name:
          description: Custom name of the point of sale.
          example: Megastore Pos
          maxLength: 20
          minLength: 1
          type: string
      type: object
    PosSchedule:
      description: Schedule resource of a point of sale
      properties:
        scheduleId:
          description: Unique identifier given to the schedule
          example: 33b811920-1712-477d-910a-0533a3a3a33e
          readOnly: true
          type: string
        active:
          description: If set to false the schedule will be disabled
          example: 'true'
          pattern: ^true|false$
          type: string
        transactionType:
          description: Transaction to be executed by the schedule
          enum:
            - CLEARANCE
          type: string
        time:
          description: Define the time of the day to execute the operation, minutes can only be at 00 or 30.
          example: '00:30'
          pattern: ^([0-1]?[0-9]|2[0-3]):(00|30)$
          type: string
        posId:
          description: Unique identifier of the point of sale owner of the schedule
          example: '1'
          readOnly: true
          type: string
        creationDate:
          description: Indicates the creation date of the schedule
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          description: Indicates the last change date of the schedule
          format: date-time
          readOnly: true
          type: string
      type: object
    PosScheduleList:
      items:
        $ref: '#/components/schemas/PosSchedule'
      type: array
    PosScheduleExecution:
      properties:
        executionId:
          description: Unique identifier given to the schedule execution
          example: 33b811920-1712-477d-910a-0533a3a3a33e
          readOnly: true
          type: string
        scheduleId:
          description: Unique identifier of the scheduler configuration
          example: 23b811920-1712-477d-910a-0533a3a3a33e
          readOnly: true
          type: string
        transactionType:
          description: Transaction type of the schedule execution
          readOnly: true
          type: string
        time:
          description: The time of the schedule execution
          example: '00:30'
          readOnly: true
          type: string
        posId:
          description: Unique identifier of the point of sale owner of the schedule
          example: '1'
          readOnly: true
          type: string
        transactionId:
          description: Transaction id of the executed operation, null if an error ocurred
          example: JYHZFCU04R67QPT1
          readOnly: true
          type: string
        supervisorId:
          description: Used supervisorId for the executed schedule transaction
          example: 13b811920-1712-477d-910a-0533a3a3a33e
          readOnly: true
          type: string
        executionState:
          description: Indicates if it was succesful requestion the operation
          enum:
            - SUCCESS
            - RUNNING
            - ERROR
          example: SUCESS
          readOnly: true
          type: string
        creationDate:
          description: Indicates the start date of the schedule execution
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          description: Indicates the end date of the schedule execution
          format: date-time
          readOnly: true
          type: string
      type: object
    PosScheduleExecutionList:
      items:
        $ref: '#/components/schemas/PosScheduleExecution'
      type: array
    PointOfSaleList:
      items:
        $ref: '#/components/schemas/PointOfSale'
      type: array
    PointOfSale:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        active:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        name:
          example: Megastore Pos
          readOnly: true
          type: string
        status:
          enum:
            - OPEN
            - CLOSE
          readOnly: true
          type: string
        scenario:
          enum:
            - MO_TO
            - ATTENDED
            - GENERIC
          readOnly: true
          type: string
        clearingPeriod:
          $ref: '#/components/schemas/ClearingPeriodIdSchema'
        establishment:
          $ref: '#/components/schemas/EstablishmentReferenceSchema'
        supervisorId:
          format: uuid
          type: string
      type: object
    Commission:
      properties:
        commissioned:
          type: number
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        contracts:
          items:
            $ref: '#/components/schemas/Contract'
          type: array
      type: object
    MerchantIdSchema:
      properties:
        id:
          readOnly: true
          type: string
      readOnly: true
      type: object
    EstablishmentReferenceSchema:
      properties:
        id:
          readOnly: true
          type: string
        merchant:
          $ref: '#/components/schemas/MerchantIdSchema'
      readOnly: true
      type: object
    ClearingPeriodsList:
      items:
        $ref: '#/components/schemas/ClearingPeriod'
      type: array
    ClearingPeriod:
      properties:
        posId:
          description: Unique identifier of the point of sale of the period
          example: '1109'
          readOnly: true
          type: string
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        number:
          readOnly: true
          type: string
        transactions:
          readOnly: true
          type: number
        openDate:
          format: date-time
          readOnly: true
          type: string
        closeDate:
          format: date-time
          readOnly: true
          type: string
        references:
          readOnly: true
          type: number
        authorized:
          readOnly: true
          type: number
        cancelled:
          readOnly: true
          type: number
        payed:
          readOnly: true
          type: number
        refunded:
          readOnly: true
          type: number
        commission:
          $ref: '#/components/schemas/CommissionImplementation'
      type: object
    OPGTransaction:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        id:
          type: string
        amount:
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 10000000000
          minimum: 0
          multipleOf: 0.01
          type: number
        clearingPeriod:
          type: string
        transactionNumber:
          type: string
        status:
          enum:
            - ACCEPTED
            - REJECTED
          type: string
        transactionType:
          enum:
            - AUTHORIZATION
            - CANCELLATION
            - REFUND
            - PAYMENT
            - OPEN
            - CLOSE
            - CLEARANCE
          type: string
        orderOrigin:
          enum:
            - PRESENT
            - ECOMMERCE_CARD
            - ECOMMERCE_MOBILE
            - MOTO_MAIL
            - MOTO_FAX
            - MOTO_TELEPHONE
            - MOBILE
          type: string
        issuerAuthorization:
          type: string
        currency:
          type: string
        pointOfSale:
          $ref: '#/components/schemas/OPGTransaction_pointOfSale'
        reference:
          $ref: '#/components/schemas/Reference'
        merchantReferenceNumber:
          description: References the merchant own order id.
          example: '201812060000001'
          type: string
        parentTransaction:
          $ref: '#/components/schemas/OPGTransaction'
        errorCode:
          type: string
        errorType:
          type: string
        errorMessage:
          type: string
      readOnly: true
      type: object
    Profile:
      properties:
        authorized:
          type: boolean
        type:
          enum:
            - EPMS
            - POSVAS
            - DUMMY
          type: string
      type: object
    Authorization:
      properties:
        amount:
          example: 9999.99
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 10000000000
          minimum: 0
          multipleOf: 0.01
          type: number
          x-notNull: '{api.payload.transactions.amount.message}'
        orderOrigin:
          description: Order Origin refers the way that the merchant get the user payment method.
          enum:
            - PRESENT
            - ECOMMERCE_CARD
            - ECOMMERCE_MOBILE
            - MOTO_MAIL
            - MOTO_FAX
            - MOTO_TELEPHONE
            - MOBILE
          type: string
          x-notNull: '{api.payload.transactions.orderOrigin.message}'
        currency:
          description: Authorization currency
          example: AOA
          type: string
        merchantReferenceNumber:
          description: References the merchant own order id.
          example: '201812060000001'
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          type: string
          x-notNull: '{api.payload.transactions.merchantReferenceNumber.message}'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
      required:
        - amount
        - merchantReferenceNumber
        - orderOrigin
        - paymentInfo
      type: object
    TransactionResponse:
      properties:
        id:
          type: string
        errorType:
          type: string
        errorCode:
          type: string
        errorMessage:
          type: string
      type: object
    Merchant:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        active:
          readOnly: true
          type: boolean
        contacts:
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        establishments:
          items:
            $ref: '#/components/schemas/Merchant_establishments'
          type: array
        acquirerBank:
          type: string
        fiscalNumber:
          type: string
        defaultPosId:
          type: string
        id:
          type: string
      type: object
    ClearingPeriodIdSchema:
      properties:
        id:
          readOnly: true
          type: string
      readOnly: true
      type: object
    AuthorizedPayment:
      properties:
        amount:
          example: 9999.99
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 10000000000
          minimum: 0
          multipleOf: 0.01
          type: number
          x-notNull: '{api.payload.transactions.amount.message}'
        currency:
          description: Authorization currency
          example: AOA
          type: string
      required:
        - amount
      type: object
    CommissionImplementation:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        commissioned:
          type: number
        contracts:
          items:
            $ref: '#/components/schemas/Contract'
          type: array
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      readOnly: true
      type: object
    GenericError:
      properties:
        type:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorBody'
          type: array
      type: object
    ErrorBody:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    ReferenceList:
      items:
        $ref: '#/components/schemas/Reference'
      type: array
    Reference:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        status:
          enum:
            - PENDING_PAYMENT
            - PARTIAL_PAYMENT
            - PAYED
            - PARTIAL_REFUND
            - CLOSED
          type: string
        orderOrigin:
          description: Order Origin refers the way that the merchant get the user payment method.
          enum:
            - PRESENT
            - ECOMMERCE_CARD
            - ECOMMERCE_MOBILE
            - MOTO_MAIL
            - MOTO_FAX
            - MOTO_TELEPHONE
            - MOBILE
          type: string
        authorized:
          type: number
        available:
          type: number
        refunded:
          type: number
        cancelled:
          type: number
        payed:
          type: number
        cancellable:
          type: boolean
        authorizable:
          type: boolean
        authorizations:
          format: int64
          type: integer
        payments:
          format: int64
          type: integer
        cancellations:
          format: int64
          type: integer
        refunds:
          format: int64
          type: integer
        id:
          type: string
        pointOfSale:
          $ref: '#/components/schemas/PointOfSale'
        paymentToken:
          $ref: '#/components/schemas/PaymentToken'
      readOnly: true
      type: object
    PaymentInfo:
      description: Allows for multiple types of payments, although only one type will be allowed.
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        card:
          $ref: '#/components/schemas/Card'
        mobile:
          $ref: '#/components/schemas/Mobile'
        token:
          $ref: '#/components/schemas/PaymentToken'
      type: object
      writeOnly: true
    SupervisorList:
      items:
        $ref: '#/components/schemas/Supervisor'
      type: array
    Supervisor:
      properties:
        type:
          default: CARD
          enum:
            - CARD
          type: string
        status:
          enum:
            - VALID
            - CANCELED
          readOnly: true
          type: string
        alias:
          description: Supervisor alias given by GPO, can be used to simplify readability
          example: 961-1
          readOnly: true
          type: string
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        merchantId:
          readOnly: true
          type: string
        establishmentId:
          readOnly: true
          type: string
        supervisorId:
          format: uuid
          readOnly: true
          type: string
        supervisorData:
          allOf:
            - $ref: '#/components/schemas/SupervisorData'
          x-notNull: '{api.supervisor.supervisorData}'
        validation:
          allOf:
            - $ref: '#/components/schemas/SupervisorValidation'
          x-notNull: '{api.supervisor.validation}'
      required:
        - supervisorData
        - validation
      type: object
      x-notNull: '{api.supervisor}'
    SupervisorData:
      properties:
        type:
          default: 961
          enum:
            - 961
          example: 961
          type: integer
          x-notNull: '{api.supervisor.supervisorData.type}'
        number:
          example: 1
          maximum: 9999
          minimum: 1
          type: integer
        bankCode:
          example: 55
          maximum: 9999
          minimum: 0
          type: integer
        bankAccount:
          example: 123456789101112
          maximum: 999999999999999
          minimum: 0
          type: number
      required:
        - type
      type: object
    SupervisorValidation:
      properties:
        posId:
          pattern: ^[0-9]{1,}$
          type: string
          x-notNull: '{api.supervisor.validation.posId}'
        transactionType:
          default: RESET
          enum:
            - RESET
            - CLOSE
          type: string
          x-notNull: '{api.supervisor.validation.type}'
      required:
        - posId
        - transactionType
      type: object
    Establishment:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        active:
          readOnly: true
          type: boolean
        pointsOfSale:
          items:
            $ref: '#/components/schemas/VirtualPos'
          type: array
        contacts:
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        merchant:
          $ref: '#/components/schemas/Merchant'
        name:
          type: string
        id:
          type: string
      type: object
    Mobile:
      properties:
        phoneNumber:
          example: '199111111'
          pattern: ^\d{9,15}$
          type: string
          x-notNull: '{api.payload.paymentInfo.mobile.message}'
      type: object
      writeOnly: true
    Card:
      properties:
        pan:
          example: '4573970047282374'
          maxLength: 19
          minLength: 11
          type: string
          x-notNull: '{api.payload.paymentInfo.card.pan.message}'
        year:
          example: 21
          format: int32
          maximum: 99
          minimum: 2
          type: integer
          x-notNull: '{api.payload.paymentInfo.card.year.message}'
        month:
          example: 1
          format: int32
          maximum: 12
          minimum: 1
          type: integer
          x-notNull: '{api.payload.paymentInfo.card.month.message}'
        cvv:
          example: '696'
          maxLength: 3
          type: string
      required:
        - month
        - pan
        - year
      type: object
      writeOnly: true
    Contact:
      properties:
        creationDate:
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          format: date-time
          readOnly: true
          type: string
        contact:
          type: string
        address:
          type: string
        name:
          type: string
      type: object
    VirtualPos:
      properties:
        status:
          enum:
            - OPEN
            - CLOSE
          type: string
        scenario:
          enum:
            - MO_TO
            - ATTENDED
            - GENERIC
          type: string
        active:
          type: boolean
        establishment:
          $ref: '#/components/schemas/Establishment'
        clearingPeriod:
          $ref: '#/components/schemas/ClearingPeriodInfo'
        id:
          type: string
      type: object
    Payment:
      properties:
        amount:
          example: 9999.99
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 10000000000
          minimum: 0
          multipleOf: 0.01
          type: number
          x-notNull: '{api.payload.transactions.amount.message}'
        orderOrigin:
          description: Order Origin refers the way that the merchant get the user payment method.
          enum:
            - PRESENT
            - ECOMMERCE_CARD
            - ECOMMERCE_MOBILE
            - MOTO_MAIL
            - MOTO_FAX
            - MOTO_TELEPHONE
            - MOBILE
          type: string
          x-notNull: '{api.payload.transactions.orderOrigin.message}'
        currency:
          description: Authorization currency
          example: AOA
          type: string
        merchantReferenceNumber:
          description: References the merchant own order id.
          example: '201812060000001'
          maxLength: 15
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          type: string
          x-notNull: '{api.payload.transactions.merchantReferenceNumber.message}'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
      required:
        - amount
        - merchantReferenceNumber
        - orderOrigin
        - paymentInfo
      type: object
    TransactionList:
      items:
        $ref: '#/components/schemas/OPGTransaction'
      type: array
    Transaction:
      properties:
        total:
          format: int32
          type: integer
        description:
          type: string
        amount:
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 10000000000
          minimum: 0
          multipleOf: 0.01
          type: number
        type:
          enum:
            - AUTHORIZATION
            - CANCELLATION
            - REFUND
            - PAYMENT
            - OPEN
            - CLOSE
          type: string
      type: object
    Refund:
      properties:
        amount:
          example: 9999.99
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 10000000000
          minimum: 0
          multipleOf: 0.01
          type: number
          x-notNull: '{api.payload.transactions.amount.message}'
        currency:
          description: Authorization currency
          example: AOA
          type: string
        supervisorCard:
          deprecated: true
          description: Supervisor Card. Use supervisorId instead, this field is to be removed.
          example: '9610000019000100010006000000000000001'
          maxLength: 37
          minLength: 18
          pattern: ^(9610)((?!0{6})[0-9]{6})((?!0{4})[0-9]{4}){2}([0-9]{4})([0-9]{15})?$
          type: string
          writeOnly: true
        supervisorId:
          description: Unique identifier of the supervisor.
          example: 70f83608-38d3-4324-82e9-e34dc59d65aa
          maxLength: 36
          minLength: 1
          type: string
          writeOnly: true
      required:
        - amount
      type: object
    GrantTokenImplementation:
      properties:
        grant_type:
          enum:
            - authorization_code
            - offline
            - refresh
          example: authorization_code
          type: string
          writeOnly: true
          x-notNull: '{api.payload.token.grant_type}'
        code:
          example: KoG8SZ6jKY9PooQGwnsUcg4cjMWydRQkfw/GNkFvsw8
          type: string
          writeOnly: true
        client_id:
          example: 9e7a492e-38df-41b6-b6bb-49c9ee401653
          type: string
          writeOnly: true
          x-notNull: '{api.payload.token.client_id}'
        client_secret:
          example: wBAiHA5N/xQ6GlSMIu8mQWMomBWUWUxdwBJa2RIm/BM=
          type: string
          writeOnly: true
          x-notNull: '{api.payload.token.client_secret}'
        user_email:
          example: merchant@mail.com
          type: string
          writeOnly: true
        refresh_token:
          example: gTFMN1cDBBcGYxlPt9RmxcM3nUYeOV0VFAbC6DWUs0OVHXLI4Z/tki/49An7jzSAJhr+asnV5f3B2uvEol8eAFsbztvsOoYCZ0ThHGGQgtZN6AYbobckeF0Y2eJzw8d6qcF7+sJOn7FiOGJsHQtIbNHufBcVRctCYNpKwzZWYRI=
          type: string
          writeOnly: true
      required:
        - client_id
        - client_secret
        - grant_type
      type: object
    ClearingPeriodInfo:
      properties:
        commission:
          $ref: '#/components/schemas/Commission'
        closeDate:
          format: date-time
          type: string
        openDate:
          format: date-time
          type: string
        number:
          type: string
      type: object
    TokenInfo:
      properties:
        processor:
          type: string
        active:
          type: boolean
        resources:
          items:
            $ref: '#/components/schemas/GrantedResource'
          type: array
        expiredDate:
          format: date-time
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
      type: object
    GrantedResource:
      properties:
        id:
          format: uuid
          type: string
        active:
          type: boolean
        identifier:
          format: int32
          type: integer
        createdDate:
          format: date-time
          type: string
        updatedDate:
          format: date-time
          type: string
      type: object
    Contract:
      properties:
        description:
          type: string
        totalTransactions:
          format: int32
          type: integer
        amount:
          type: number
        commissioned:
          type: number
        positiveCommission:
          type: boolean
        positiveBalance:
          type: boolean
      type: object
    PaymentToken:
      description: Optional token for subsequents authorizations.
      properties:
        id:
          example: 64241a6f-5123-45c1-bf2b-90ab39c6c85a
          format: uuid
          type: string
      type: object
      writeOnly: true
    TotalsPerDay:
      properties:
        date:
          example: '2021-06-06'
          format: date
          type: string
        totalTransactions:
          example: 2
          format: int64
          type: integer
        totalReferences:
          description: Total merchant references created on the day
          example: 1
          format: int64
          type: integer
        totalAuthorized:
          description: Total amount authorization on the day
          example: 4460
          type: number
        totalCancelled:
          description: Total amount cancelled on the day
          example: 2100
          type: number
        totalPayed:
          description: Total amount charged on the day
          example: 800
          type: number
        totalRefunded:
          description: Total amount refunded on the day
          example: 0
          type: number
        totalProfit:
          description: Total merchant profit on the day. Same has charged minus refunded.
          example: 800
          type: number
        totalCommissions:
          description: Total merchant commissions on the day.
          example: 800
          type: number
        totalPeriods:
          description: Total terminal periods open on the day
          example: 10
          format: int64
          type: integer
      type: object
    TotalsPerDayList:
      items:
        $ref: '#/components/schemas/TotalsPerDay'
      type: array
    TotalsPerHour:
      properties:
        hour:
          example: 14
          format: int32
          type: integer
        totalTransactions:
          example: 2
          format: int64
          type: integer
        totalReferences:
          description: Total merchant references created at the hour
          example: 1
          format: int64
          type: integer
        totalAuthorized:
          description: Total amount authorization at the hour
          example: 4460
          type: number
        totalCancelled:
          description: Total amount cancelled at the hour
          example: 2100
          type: number
        totalPayed:
          description: Total amount charged at the hour
          example: 800
          type: number
        totalRefunded:
          description: Total amount refunded at the hour
          example: 0
          type: number
        totalProfit:
          description: Total merchant profit at the hour. Same has charged minus refunded.
          example: 800
          type: number
      type: object
    TotalsPerHourList:
      items:
        $ref: '#/components/schemas/TotalsPerHour'
      type: array
    ProcessorError:
      properties:
        errorCode:
          example: POS_830
          type: string
        errorMessage:
          example: Terminal reached maximum transactions for period. Please retry last operation.
          type: string
      readOnly: true
      type: object
    ProcessorErrorList:
      items:
        $ref: '#/components/schemas/ProcessorError'
      type: array
    OPGTransaction_pointOfSale:
      properties:
        id:
          type: string
    Merchant_establishments:
      properties:
        id:
          type: string
        name:
          type: string
        active:
          type: boolean
        contacts:
          items:
            $ref: '#/components/schemas/Contact'
          type: array
  securitySchemes:
    BearerAuth:
      description: OAuth Bearer Token
      scheme: bearer
      type: http
