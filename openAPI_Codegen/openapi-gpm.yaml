openapi: 3.0.1
info:
  title: Mobile Payment Gateway
  version: '2.0'
  x-logo:
    url: http://localhost:8080/mobile-payment-gateway/static/logo2.gif
servers:
  - description: GPM Server
    url: '{url}/mobile-payment-gateway/api'
    variables:
      url:
        default: http://localhost:8080
        description: Location of GPM API
security:
  - BearerAuth: []
tags:
  - description: Endpoints responsible for handling activation resources.
    name: Activation
  - description: Endpoints responsible for handling registration resources.
    name: Registration
  - description: Endpoints responsible for handling authentication resources.
    name: Authentication
  - description: Endpoints responsible for handling Devices resources.
    name: Devices
paths:
  /v1/activations:
    post:
      description: Service that receives a mobile number and sends a SMS with a activation code to the given mobile number.
      operationId: createActivation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        description: Activation request body object
        required: true
      responses:
        '202':
          description: Request was accepted but the process may be executing.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Creates an activation code.
      tags:
        - Activation
    put:
      description: After receiving a activation code with SMS Retriever in the POST method, activation code is verified and if it is correct device is activated.
      operationId: updateActivation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationUpdate'
        description: Activation request body object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                deviceId: '123456789'
              schema:
                $ref: '#/components/schemas/ActivationUpdateResponse'
          description: Given data is correct and device already exists.
        '202':
          content:
            application/json:
              example:
                verificationCode: '123456789'
              schema:
                $ref: '#/components/schemas/ActivationUpdateResponse'
          description: Given data is correct but device does not exists.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '404':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: RESOURCE
                    message: Activation with id 33b811920-1712-477d-910a-0533a3a3a33e not found.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Given activation code expired
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Verifies activation code.
      tags:
        - Activation
  /v1/devices:
    get:
      description: Service that retrieves a list of devices.
      operationId: getAllDevices
      parameters:
        - explode: false
          in: header
          name: X-merchantId
          required: true
          schema:
            default: '21'
            type: string
          style: simple
        - explode: true
          in: query
          name: $skip
          required: false
          schema:
            default: '0'
            type: string
          style: form
        - explode: true
          in: query
          name: $top
          required: false
          schema:
            default: '20'
            type: string
          style: form
        - description: using any parameter from the response body, the results can be sorted with ASC(ascending) or DESC(descending)
          explode: true
          in: query
          name: $orderBy
          required: false
          schema:
            type: string
            x-notNull: '{api.queryParameters.orderby}'
          style: form
        - description: using any parameter from the response body, the filter criteria can be eq(equals), ne(not equals), lt(less than), le(less than or equals), gt(greater than), ge(greater than or equals). For parameters within an object a "/" is used (e.g. pointOfSale/id). To have more than one filter use AND, OR operator between filters.
          explode: true
          in: query
          name: $filter
          required: false
          schema:
            example: mobileDevice/model eq 'iPhone' AND application/version eq '1.4.1'
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
          description: Success retrieving devices.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Get a list of devices.
      tags:
        - Devices
    post:
      description: After activate a device and a registration code was created in portal, device can be registed using this service.
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCreationRequest'
        description: Device body object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCreationResponse'
          description: Device already exists
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCreationResponse'
          description: Device was created with success.
        '202':
          description: Given data is correct but device does not exists.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Uses registration code to regist device.
      tags:
        - Devices
  /v1/devices/{deviceId}/login:
    post:
      description: Service that allows an user to login in the application
      operationId: loginDevice
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        description: Login request body object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: Successful login.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '409':
          content:
            application/json:
              example:
                type: CONFLICT
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: User is incorrect
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Login in TPA Express
      tags:
        - Authentication
  /v1/devices/{deviceId}/logout:
    post:
      description: Service that allows an user to logout in the application
      operationId: logout
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutWithRefreshToken'
        description: Logout request body object
        required: true
      responses:
        '200':
          description: User was logged out the application
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Logout TPA Express
      tags:
        - Authentication
  /v1/devices/{deviceId}/forceLogout:
    post:
      description: Service that allows an user to force logout of another user in the application
      operationId: forceLogout
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: User was logged out the application
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Force Logout through Porta
      tags:
        - Authentication
  /v1/devices/{deviceId}/refresh:
    post:
      description: Access token is refreshed after the one received with the successful login expired. TTL can be configured
      operationId: refreshAccessToken
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        description: Logout request body object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
          description: Access Token was refreshed with success
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Refresh a device access token
      tags:
        - Authentication
  /v1/devices/{deviceId}:
    get:
      description: Service that retrieves a device
      operationId: getDevice
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device was found
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Get a device
      tags:
        - Devices
    put:
      description: Service used to update device's information
      operationId: updateDevice
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdate'
        description: Device info to update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device was updated with success
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Update a device
      tags:
        - Devices
  /v1/devices/{deviceId}/authentications:
    get:
      description: Service that retrieves all authentications done for a given device
      operationId: getDeviceAuthentications
      parameters:
        - explode: false
          in: path
          name: deviceId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationList'
          description: Success retrieving all device authentications.
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Get device authentications
      tags:
        - Authentication
  /v1/registrations:
    post:
      description: Service used in the GPO Portal to generate a registration code that will be used to regist a device.
      operationId: createRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        description: Registration request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
          description: Device was updated with success
        '400':
          content:
            application/json:
              example:
                type: INVALID_REQUEST
                errors:
                  - code: BODY
                    message: This message is variable.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                type: AUTHORIZATION
                errors:
                  - code: NOT_AUTHORIZED
                    message: Not authorized.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unauthorized request
        '500':
          content:
            application/json:
              example:
                type: SYSTEM_ERROR
                errors:
                  - code: GENERAL_ERROR
                    message: System unavailable. Please contact support.
              schema:
                $ref: '#/components/schemas/GenericError'
          description: System Unavailable
      summary: Create a device registration
      tags:
        - Registration
components:
  schemas:
    GrantToken:
      properties:
        tokenType:
          enum:
            - bearer
          type: string
        access_token:
          example: 3fb7aad0-f707-44e0-a123-caf08097a8bd"
          type: string
        refresh_token:
          example: gTFMN1cDBBcGYxlPt9RmxcM3nUYeOV0VFAbC6DWUs0OVHXLI4Z/tki/49An7jzSAJhr+asnV5f3B2uvEol8eAFsbztvsOoYCZ0ThHGGQgtZN6AYbobckeF0Y2eJzw8d6qcF7+sJOn7FiOGJsHQtIbNHufBcVRctCYNpKwzZWYRI=
          type: string
        id_token:
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiRExfR1BPIiwiZXhwIjoxNjA0Njc2NTQ5LCJpYXQiOjE2MDI1ODU0NzQsInVzZXJJZCI6IjU4MzRlMzkxLTNmMzQtNDA2ZS1hYmE5LTIzNDE4YjI5OGJhYSIsImVtYWlsIjoiZGwtZ3BvQHNpYnMuY29tIn0.e8HlOjXSN0dbvO0VJqFlugyvEdHZRFItVRZLv5oGxrA
          type: string
        expiresIn:
          example: 3600
          format: int32
          type: integer
      type: object
    ActivationRequest:
      properties:
        mobileNumber:
          $ref: '#/components/schemas/MobileNumber'
      required:
        - mobileNumber
      type: object
    ActivationUpdate:
      properties:
        mobileNumber:
          $ref: '#/components/schemas/MobileNumber'
        mobileDeviceId:
          description: Mobile device ID related to the activation.
          example: 0123456789abcdef
          type: string
        activationCode:
          description: Activation code received by SMS.
          example: '12345678'
          type: string
      required:
        - activationCode
        - mobileDeviceId
        - mobileNumber
      type: object
    ActivationUpdateResponse:
      properties:
        deviceId:
          $ref: '#/components/schemas/DeviceId'
        verificationCode:
          $ref: '#/components/schemas/VerificationCode'
      type: object
    DeviceCreationRequest:
      properties:
        user:
          $ref: '#/components/schemas/DeviceUser'
        verificationCode:
          $ref: '#/components/schemas/VerificationCode'
        application:
          $ref: '#/components/schemas/DeviceApplication'
        registration:
          $ref: '#/components/schemas/DeviceRegistration'
        mobileDevice:
          $ref: '#/components/schemas/MobileDevice'
      required:
        - application
        - mobileDevice
        - registration
        - user
        - verificationCode
      type: object
    Device:
      properties:
        deviceId:
          $ref: '#/components/schemas/DeviceId'
        mobileNumber:
          $ref: '#/components/schemas/MobileNumber'
        merchantId:
          $ref: '#/components/schemas/MerchantId'
        terminalId:
          $ref: '#/components/schemas/TerminalId'
        terminalName:
          $ref: '#/components/schemas/TerminalName'
        registration:
          $ref: '#/components/schemas/DeviceRegistrationUser'
        application:
          $ref: '#/components/schemas/DeviceApplication'
        mobileDevice:
          $ref: '#/components/schemas/MobileDevice'
        status:
          $ref: '#/components/schemas/DeviceStatus'
        loggedBy:
          description: User logged with this device.
          example: gl-gpo
          type: string
        createdBy:
          description: User that created this devices;
          example: gl-gpo
          type: string
        creationDate:
          description: Date when authentication was inserted in database.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
        updatedDate:
          description: Date when authentication was updated in database.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
      required:
        - application
        - createdBy
        - creationDate
        - deviceId
        - merchantId
        - mobileDevice
        - mobileNumber
        - registration
        - status
        - terminalId
      type: object
    DeviceCreationResponse:
      properties:
        deviceId:
          $ref: '#/components/schemas/DeviceId'
      required:
        - deviceId
      type: object
    MobileDevice:
      properties:
        version:
          description: Device version.
          example: Android 12
          type: string
          x-notNull: '{api.mobileDevice.version}'
        model:
          description: Device model.
          example: Samsung Galaxy S7
          type: string
          x-notNull: '{api.mobileDevice.model}'
        name:
          description: Device name.
          example: John's mobile
          type: string
        mobileNumber:
          description: Device number.
          example: '910000001'
          type: string
      required:
        - model
        - version
      type: object
    DeviceRegistration:
      properties:
        code:
          description: Code that was generated in the GPO Portal.
          example: '123456789'
          type: string
      required:
        - code
      type: object
    DeviceRegistrationUser:
      properties:
        user:
          $ref: '#/components/schemas/DeviceUser'
      required:
        - user
      type: object
    DeviceApplication:
      properties:
        version:
          description: TPA Express version instaled on device.
          example: 1.3.1
          type: string
          x-notNull: '{api.deviceApplication.version}'
      required:
        - version
      type: object
    LoginRequest:
      properties:
        user:
          $ref: '#/components/schemas/DeviceUser'
        password:
          description: User's password.
          example: P4ssW0rd
          type: string
          x-notNull: '{api.login.password}'
        application:
          allOf:
            - $ref: '#/components/schemas/DeviceApplication'
          x-notNull: '{api.login.deviceApplication}'
        mobileDevice:
          allOf:
            - $ref: '#/components/schemas/MobileDevice'
          x-notNull: '{api.login.mobileDevice}'
      required:
        - application
        - mobileDevice
        - password
        - user
      type: object
    LoginResponse:
      properties:
        accessToken:
          $ref: '#/components/schemas/AccessToken'
        refreshToken:
          $ref: '#/components/schemas/RefreshToken'
        expiresIn:
          description: AcessToken time to live in miliseconds.
          example: 3600
          format: int32
          type: integer
        refreshExpiresIn:
          description: Refresh Token time to live in miliseconds.
          example: 3600
          format: int32
          type: integer
        merchantId:
          $ref: '#/components/schemas/MerchantId'
        terminalId:
          $ref: '#/components/schemas/TerminalId'
      required:
        - accessToken
        - expiresIn
        - merchantId
        - refreshToken
        - terminalId
      type: object
    LogoutWithRefreshToken:
      properties:
        refreshToken:
          $ref: '#/components/schemas/RefreshToken'
      required:
        - refreshToken
      type: object
    DeviceUser:
      description: User unique identifier.
      example: '1000'
      type: string
      x-notNull: '{api.login.user}'
    AccessToken:
      description: Application bearer token.
      example: 67648bd3-da8b-4c1c-8d0e-ee2b2bcf80b1
      type: string
      x-notNull: '{api.login.accessToken}'
    ExpiresIn:
      description: AcessToken time to live in miliseconds.
      example: 3600
      format: int32
      type: integer
    VerificationCode:
      description: Activation code used to verify device.
      example: '123456789'
      type: string
    DeviceId:
      description: Unique device identifier.
      example: '123456789'
      type: string
    RefreshTokenRequest:
      properties:
        user:
          $ref: '#/components/schemas/DeviceUser'
        refreshToken:
          $ref: '#/components/schemas/RefreshToken'
      required:
        - refreshToken
        - user
      type: object
    RefreshTokenResponse:
      properties:
        accessToken:
          $ref: '#/components/schemas/AccessToken'
        expiresIn:
          $ref: '#/components/schemas/ExpiresIn'
      required:
        - accessToken
        - expiresIn
      type: object
    DeviceList:
      items:
        $ref: '#/components/schemas/Device'
      type: array
    DeviceStatus:
      description: Current device status.
      enum:
        - ACTIVE
        - DISABLED
        - CANCELED
      example: ACTIVE
      type: string
    RegistrationRequest:
      properties:
        merchantId:
          $ref: '#/components/schemas/MerchantId'
        terminalId:
          $ref: '#/components/schemas/TerminalId'
        registration:
          $ref: '#/components/schemas/DeviceRegistrationUser'
        notify:
          $ref: '#/components/schemas/Notify'
      required:
        - merchantId
        - registration
        - terminalId
      type: object
    RegistrationResponse:
      properties:
        registration:
          $ref: '#/components/schemas/Registration'
        expiresIn:
          $ref: '#/components/schemas/ExpiresIn'
        creationDate:
          description: Date when registration was inserted in database.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
      required:
        - creationDate
        - expiresIn
        - registration
      type: object
    MobileNumber:
      description: Mobile number to which SMS with an activaction code is sent.
      example: '911111111'
      type: string
    RefreshToken:
      description: Token used to refresh AcessToken when it expires.
      example: 67648bd3-da8b-4c1c-8d0e-ee2b2bcf80b1
      type: string
      x-notNull: '{api.login.refreshToken}'
    MerchantId:
      description: Merchant unique identifier.
      example: '1011'
      type: string
      x-notNull: '{api.merchantId}'
    TerminalId:
      description: Merchant terminal unique identifier that will be used in device.
      example: '1000'
      type: string
      x-notNull: '{api.terminalId}'
    TerminalName:
      description: Name of the terminal that will be used in device.
      example: Lorem ipsum
      type: string
    Notify:
      description: User can be notified with registration code.
      properties:
        mobile:
          $ref: '#/components/schemas/NotifyMobile'
        email:
          $ref: '#/components/schemas/NotifyEmail'
      type: object
    Registration:
      description: Notification using phone number.
      properties:
        code:
          description: Code used to regist device in TPA Express
          example: '12345678'
          type: string
      required:
        - code
      type: object
    NotifyMobile:
      description: Notification using phone number.
      properties:
        value:
          description: Phone number to where registration code is sent.
          example: '911111111'
          type: string
        active:
          description: Enable or disable notification through phone number.
          example: true
          type: boolean
      type: object
    NotifyEmail:
      description: Notification using email.
      properties:
        value:
          description: E-mail to where registration code is sent.
          example: sibs@sibs.com
          type: string
        active:
          description: Enable or disable notification through mail.
          example: true
          type: boolean
      type: object
    Authentication:
      description: Authentication info for a given device.
      properties:
        loginAt:
          description: Device login date.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
        logoutAt:
          description: Device logout date.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
        createdAt:
          description: Date when authentication was inserted in database.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          description: Date when authentication was updated in database.
          example: '2021-02-26T11:13:05.066Z'
          format: date-time
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/DeviceUser'
      required:
        - createdAt
        - loginAt
        - logoutAt
        - user
      type: object
    AuthenticationList:
      items:
        $ref: '#/components/schemas/Authentication'
      type: array
    DeviceUpdate:
      description: Device info to be updated
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        terminalId:
          $ref: '#/components/schemas/TerminalId'
      type: object
    GenericError:
      properties:
        type:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorBody'
          type: array
      type: object
    ErrorBody:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      description: OAuth Bearer Token
      scheme: bearer
      type: http
